# Golf Pass Environment Variables Template
# -----------------------------------------------------------------------------
# Copy this file to .env.local for local development and .env.production.local
# for production builds, then fill in the actual values.
#
# - Lines starting with # are comments.
# - Variables prefixed with NEXT_PUBLIC_ are exposed to the browser.
# - NEVER commit your .env.local or .env.production.local files to Git.
#
# -----------------------------------------------------------------------------
# Next.js & Application Settings
# -----------------------------------------------------------------------------

# Environment: 'development', 'production', or 'test'
NODE_ENV=development

# Public URL of the application (e.g., http://localhost:3000 or https://golfpass.io)
NEXT_PUBLIC_APP_URL=http://localhost:3000

# Optional: Secret for NextAuth.js if you were to use it alongside Supabase Auth
# NEXTAUTH_SECRET=
# NEXTAUTH_URL=${NEXT_PUBLIC_APP_URL}

# Logging level (e.g., 'debug', 'info', 'warn', 'error')
LOG_LEVEL=debug

# -----------------------------------------------------------------------------
# Supabase Configuration (Backend, Auth, Database, Storage)
# -----------------------------------------------------------------------------

# Public URL for your Supabase instance (frontend access)
# For local Supabase: http://localhost:54321 (default from Supabase CLI)
# For production: Your_Supabase_Project_URL
NEXT_PUBLIC_SUPABASE_URL=

# Public anonymous key for your Supabase instance (frontend access)
# For local Supabase: Get this from `supabase status` or Supabase Studio
# For production: Your_Supabase_Project_Anon_Key
NEXT_PUBLIC_SUPABASE_ANON_KEY=

# Secret service role key for Supabase (backend access, e.g., API routes, Edge Functions)
# DANGER: Keep this secret and never expose it to the frontend.
# For local Supabase: Get this from `supabase status` or Supabase Studio
# For production: Your_Supabase_Project_Service_Role_Key
SUPABASE_SERVICE_ROLE_KEY=

# Direct PostgreSQL connection string for Supabase (optional, for backend services/migrations)
# Format: postgresql://postgres:[YOUR-PASSWORD]@[YOUR-HOST]:[YOUR-PORT]/postgres
# For local Supabase: postgresql://postgres:postgres@localhost:54322/postgres (default from Supabase CLI)
# For production: Your_Supabase_Project_DB_Connection_String (Connection Pooling recommended)
SUPABASE_DB_URL=

# JWT Secret for Supabase (if validating JWTs outside Supabase or for specific local setups)
# For local Supabase: Get this from `supabase status` or Supabase Studio (usually a long random string)
# For production: Your_Supabase_Project_JWT_Secret
SUPABASE_JWT_SECRET=

# -----------------------------------------------------------------------------
# Stripe Configuration (Payments)
# -----------------------------------------------------------------------------

# Public publishable key for Stripe.js (frontend access)
# For test mode: pk_test_YOUR_STRIPE_TEST_PUBLISHABLE_KEY
# For live mode: pk_live_YOUR_STRIPE_LIVE_PUBLISHABLE_KEY
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=

# Secret key for Stripe API (backend access)
# DANGER: Keep this secret and never expose it to the frontend.
# For test mode: sk_test_YOUR_STRIPE_TEST_SECRET_KEY
# For live mode: sk_live_YOUR_STRIPE_LIVE_SECRET_KEY
STRIPE_SECRET_KEY=

# Stripe Webhook Secret (for verifying webhook events from Stripe)
# DANGER: Keep this secret.
# For local testing: Use Stripe CLI `stripe listen --forward-to localhost:3000/api/webhooks/stripe` to get a local secret (whsec_...)
# For production: Your_Stripe_Webhook_Endpoint_Secret
STRIPE_WEBHOOK_SECRET=

# -----------------------------------------------------------------------------
# Meilisearch Configuration (Search Engine)
# -----------------------------------------------------------------------------

# Public URL for your Meilisearch instance (frontend access)
# For local Meilisearch: http://localhost:7700 (default)
# For production: Your_Meilisearch_Instance_URL
NEXT_PUBLIC_MEILISEARCH_HOST=

# Meilisearch Master/Admin Key (backend access for indexing, settings)
# DANGER: Keep this secret.
# For local Meilisearch: A_RANDOM_MASTER_KEY (or leave blank if no auth in dev)
# For production: Your_Meilisearch_Admin_API_Key
MEILISEARCH_MASTER_KEY=

# Meilisearch Public Search API Key (frontend access, search-only permissions)
# Generate this from your Meilisearch instance with restricted permissions.
# For local Meilisearch: Can be same as Master Key if auth is off, or a generated search key.
# For production: Your_Meilisearch_Search_API_Key
NEXT_PUBLIC_MEILISEARCH_SEARCH_KEY=

# -----------------------------------------------------------------------------
# AI Service Configuration (e.g., FastAPI for Recommendations)
# -----------------------------------------------------------------------------

# URL for the AI microservice (e.g., recommendations, dynamic pricing)
# For local AI service: http://localhost:8000 (example)
# For production: Your_AI_Service_URL
AI_SERVICE_URL=

# API Key for authenticating with the AI microservice (if required)
# DANGER: Keep this secret if it's a backend-to-backend call.
AI_SERVICE_API_KEY=

# -----------------------------------------------------------------------------
# Image Hosting / CDN (If not using Supabase Storage exclusively)
# -----------------------------------------------------------------------------
# Example for Cloudinary (if used, adapt next.config.js images.domains)
# NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME=
# CLOUDINARY_API_KEY=
# CLOUDINARY_API_SECRET=

# Example for AWS S3 (if used directly, adapt next.config.js images.domains)
# AWS_ACCESS_KEY_ID=
# AWS_SECRET_ACCESS_KEY=
# AWS_S3_BUCKET_NAME=
# AWS_S3_REGION=

# -----------------------------------------------------------------------------
# Other Third-Party Services
# -----------------------------------------------------------------------------

# Example: Email Service (e.g., Resend, SendGrid)
# EMAIL_SERVER_HOST=
# EMAIL_SERVER_PORT=
# EMAIL_SERVER_USER=
# EMAIL_SERVER_PASSWORD=
# EMAIL_FROM=

# Example: Monitoring/Error Tracking (e.g., Sentry)
# NEXT_PUBLIC_SENTRY_DSN=

# -----------------------------------------------------------------------------
# Feature Flags (Optional)
# -----------------------------------------------------------------------------
# Example: Toggle new features on/off
# NEXT_PUBLIC_FEATURE_NEW_CHECKOUT=true
# NEXT_PUBLIC_FEATURE_AR_PREVIEW=false

